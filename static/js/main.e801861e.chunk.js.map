{"version":3,"sources":["components/Container/Container.jsx","components/Section/Section.jsx","components/Feedback/Feedback.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/App.jsx","index.js","components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css"],"names":["Container","children","Section","title","Feedback","options","onLeaveFeedback","className","css","listBtn","map","option","btn","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","setTotal","positivePercentageFeedback","setPositivePercentageFeedback","useEffect","Math","round","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kNAIeA,EAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,8BAAMA,KCC3B,SAASC,EAAT,GAAwC,IAApBD,EAAmB,EAAnBA,SAAUE,EAAS,EAATA,MAC3C,OACE,oCACE,6BAAKA,IACJF,K,oBCyBQG,MA5Bf,YAAiD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC3B,OACE,oBAAIC,UAAWC,IAAIC,QAAnB,SACGJ,EAAQK,KAAI,SAACC,GACZ,OACE,6BACE,wBACEJ,UAAWC,IAAII,IACfC,KAAK,SACLC,KAAMH,EACNI,QAAS,kBAAMT,EAAgBK,IAJjC,SAMGA,KAPIA,S,gBCLJ,SAASK,EAAT,GAAyE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/D,OACE,gCACE,oBAAGd,UAAWC,IAAIS,KAAlB,oBAAgCA,KAChC,oBAAGV,UAAWC,IAAIU,QAAlB,sBAAqCA,KACrC,oBAAGX,UAAWC,IAAIW,IAAlB,kBAA6BA,KAC7B,wCAAWC,KACX,oDAAuBC,EAAvB,UCASC,MARf,YAAqC,IAAZC,EAAW,EAAXA,QACvB,OAAO,4BAAIA,KCGE,SAASC,IAEtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KACA,EAA0BH,mBAAS,GAAnC,mBAAOL,EAAP,KAAcS,EAAd,KACA,EAAoEJ,mBAAS,GAA7E,mBAAOK,EAAP,KAAmCC,EAAnC,KA8BA,OAVAC,qBAAU,WACRH,EAASZ,EAAOC,EAAUC,KACzB,CAACF,EAAMC,EAASC,IAGnBa,qBAAU,WACRD,EAA8BE,KAAKC,MAAOjB,EAAOG,EAAS,QACzD,CAACH,EAAMG,IAIR,eAAC,EAAD,WACE,cAAClB,EAAD,CAASC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEE,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAhCe,SAAAK,GACrB,OAAQA,GACN,IAAK,OACHe,GAAQ,SAAAS,GAAQ,OAAIA,EAAW,KAC/B,MACF,IAAK,UACHR,GAAW,SAAAS,GAAW,OAAIA,EAAc,KACxC,MACF,IAAK,MACHR,GAAO,SAAAS,GAAO,OAAIA,EAAU,KAC5B,MAEF,QACA,aAsBA,cAACnC,EAAD,CAASC,MAAM,aAAf,SACGiB,EACC,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBS,IAGpB,cAAC,EAAD,CAASP,QAAQ,2BCzD7Be,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,0B,kBCA9FD,EAAOC,QAAU,CAAC,QAAU,0BAA0B,IAAM,yB","file":"static/js/main.e801861e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Container = ({ children }) => <div>{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Section ({ children, title }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Feedback.module.css';\n\nfunction Feedback({ options, onLeaveFeedback }) {\n  return (\n    <ul className={css.listBtn}>\n      {options.map((option) => {\n        return (\n          <li key={option}>\n            <button\n              className={css.btn}\n              type=\"button\"\n              name={option}\n              onClick={() => onLeaveFeedback(option)}\n            >\n              {option}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  )\n}\n\n\n\nFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default Feedback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\n\nexport default function Statistics ({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p className={css.good}> Good: {good}</p>\n      <p className={css.neutral}>Neutral: {neutral}</p>\n      <p className={css.bad}>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  totalFeedback: PropTypes.number,\n  positiveFeedbackPercentage: PropTypes.number,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Notification ({ message }) {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useState, useEffect} from \"react\";\nimport Container from './Container/Container';\nimport Section from './Section/Section';\nimport Feedback from './Feedback/Feedback';\nimport Statistics from './Statistics/Statistics';\nimport Notific from './Notification/Notification';\n\nexport default function App() {\n  \n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [total, setTotal] = useState(0);\n  const [positivePercentageFeedback, setPositivePercentageFeedback] = useState(0);\n\n\n  const incrementClick = option => {\n    switch (option) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n      \n      default:\n      return;\n    }\n  }\n\n  useEffect(() => {\n    setTotal(good + neutral + bad)\n  }, [good, neutral, bad]);\n\n\n  useEffect(() => {\n    setPositivePercentageFeedback(Math.round((good / total) * 100));\n  }, [good, total]);\n\n \n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <Feedback\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={incrementClick}\n        />\n      </Section>\n      <Section title=\"Statistics\" >\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentageFeedback}\n          />\n        ) : (\n            <Notific message=\"No feedback given\" />\n          )}\n      </Section>\n    </Container>\n\n  )\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"Statistics_good__WsoH8\",\"neutral\":\"Statistics_neutral__3Fq7q\",\"bad\":\"Statistics_bad__3UqLu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listBtn\":\"Feedback_listBtn__vAz6l\",\"btn\":\"Feedback_btn__3JH7p\"};"],"sourceRoot":""}